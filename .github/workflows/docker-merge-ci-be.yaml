name: Re-Tag and Push Latest Image to Docker Hub When PR is Merged

on:
  pull_request:
    branches:
      - main
    paths:
      - 'server/**'
    types: [closed]

jobs:
  update-latest-tag:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest

    steps:
      # Checkout the merged PR code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract the GitHead Tag (Short SHA)
      - name: Get commit SHA
        id: get_sha
        run: echo "sha_short=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)" >> $GITHUB_ENV

      # Pull the current 'latest' image and tag it as 'stable'
      - name: Retag Latest as Stable
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/be-mern-server:latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/be-mern-server:latest ${{ secrets.DOCKER_USERNAME }}/be-mern-server:stable
          docker push ${{ secrets.DOCKER_USERNAME }}/be-mern-server:stable

      # Pull the new image, tag it as 'latest', and push it
      - name: Tag and Push Latest
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/be-mern-server:${{ env.sha_short }}
          docker tag ${{ secrets.DOCKER_USERNAME }}/be-mern-server:${{ env.sha_short }} ${{ secrets.DOCKER_USERNAME }}/be-mern-server:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/be-mern-server:latest

      # Setup ssh key
      - name: Set up SSH Key
        run: |
          echo "${{ secrets.EKS_CONTROL_PLANE_SSH_KEY }}" > eks_ssh_key
          chmod 400 eks_ssh_key


      # SSH into the server and restart the deployment
      - name: Restart Deployment on EKS
        run: |
          ssh -o StrictHostKeyChecking=no -i eks_ssh_key ec2-user@${{ secrets.EKS_CONTROL_PLANE_IP_ADDRESS }} << 'EOF'
          sudo su - << 'INNER_EOF'
          kubectl rollout restart deployment rmit-store-server-canary
          INNER_EOF
          EOF